{"ast":null,"code":"var _jsxFileName = \"C:\\\\react-projects\\\\burger-builder\\\\src\\\\containers\\\\Checkout\\\\ContactData\\\\ContactData.js\";\nimport React, { Component } from 'react';\nimport Button from '../../../components/UI/Button/Button';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport classes from './ContactData.css';\nimport axios from '../../../axios-orders';\nimport Input from '../../../components/UI/Input/Input';\n\nclass ContactData extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      orderForm: {\n        name: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Your name'\n          },\n          value: ''\n        },\n        street: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Street'\n          },\n          value: ''\n        },\n        zipCode: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'ZIP Code'\n          },\n          value: ''\n        },\n        country: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Country'\n          },\n          value: ''\n        },\n        email: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'email',\n            placeholder: 'Your Mail'\n          },\n          value: ''\n        },\n        deliveryMethod: {\n          elementType: 'select',\n          elementConfig: {\n            options: [{\n              value: 'fastest',\n              displayValue: 'Fastest'\n            }, {\n              value: 'cheapest',\n              displayValue: 'Cheapest'\n            }]\n          },\n          value: ''\n        }\n      },\n      loading: false\n    };\n\n    this.orderHandler = event => {\n      event.preventDefault();\n      this.setState({\n        loading: true\n      });\n      const order = {\n        ingredients: this.props.ingredients,\n        price: this.props.price\n      };\n      axios.post('/orders.json', order).then(response => {\n        this.setState({\n          loading: false\n        });\n        this.props.history.push('/');\n      }).catch(error => {\n        this.setState({\n          loading: false\n        });\n      });\n    };\n  }\n\n  render() {\n    const formElementsArray = [];\n\n    for (var key in this.state.orderForm) {\n      formElementsArray.push({\n        id: key,\n        config: this.state.orderForm[key]\n      });\n    }\n\n    let form = React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, formElementsArray.map(formElement => React.createElement(Input, {\n      elementType: formElement.config.elementType,\n      elementConfig: formElement.config.elementConfig,\n      value: formElement.config.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    })), React.createElement(Button, {\n      btnType: \"Success\",\n      clicked: this.orderHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"ORDER\"));\n\n    if (this.state.loading) {\n      form = React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: classes.ContactData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Enter your Contact Data\"), form);\n  }\n\n}\n\nexport default ContactData;","map":{"version":3,"sources":["C:\\react-projects\\burger-builder\\src\\containers\\Checkout\\ContactData\\ContactData.js"],"names":["React","Component","Button","Spinner","classes","axios","Input","ContactData","state","orderForm","name","elementType","elementConfig","type","placeholder","value","street","zipCode","country","email","deliveryMethod","options","displayValue","loading","orderHandler","event","preventDefault","setState","order","ingredients","props","price","post","then","response","history","push","catch","error","render","formElementsArray","key","id","config","form","map","formElement"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport Spinner from '../../../components/UI/Spinner/Spinner';\r\nimport classes from './ContactData.css';\r\nimport axios from '../../../axios-orders';\r\nimport Input from '../../../components/UI/Input/Input';\r\n\r\nclass ContactData extends Component {\r\n    state = {\r\n        orderForm: {\r\n                name: {\r\n                    elementType: 'input',\r\n                    elementConfig: {\r\n                        type: 'text',\r\n                        placeholder: 'Your name'\r\n                    },\r\n                    value: ''\r\n                },\r\n                street: {\r\n                        elementType: 'input',\r\n                        elementConfig: {\r\n                            type: 'text',\r\n                            placeholder: 'Street'\r\n                        },\r\n                        value: ''\r\n                },\r\n                zipCode: {\r\n                        elementType: 'input',\r\n                        elementConfig: {\r\n                            type: 'text',\r\n                            placeholder: 'ZIP Code'\r\n                        },\r\n                        value: ''\r\n                },\r\n                country: {\r\n                        elementType: 'input',\r\n                        elementConfig: {\r\n                            type: 'text',\r\n                            placeholder: 'Country'\r\n                        },\r\n                        value: ''\r\n                },\r\n                email: {\r\n                        elementType: 'input',\r\n                        elementConfig: {\r\n                            type: 'email',\r\n                            placeholder: 'Your Mail'\r\n                        },\r\n                        value: ''\r\n                },\r\n                deliveryMethod: {\r\n                        elementType: 'select',\r\n                        elementConfig: {\r\n                            options:[\r\n                                {value: 'fastest', displayValue: 'Fastest'},\r\n                                {value: 'cheapest', displayValue: 'Cheapest'}\r\n                            ]\r\n                        },\r\n                        value: ''\r\n                }   \r\n        },\r\n        loading: false\r\n    }\r\n\r\n    orderHandler = (event) => {\r\n        event.preventDefault();\r\n        this.setState({loading: true});\r\n        const order = {\r\n            ingredients: this.props.ingredients,\r\n            price: this.props.price,   \r\n            \r\n        }\r\n\r\n        axios.post('/orders.json', order)\r\n            .then(response => {\r\n                this.setState({loading: false});\r\n                this.props.history.push('/');\r\n            })\r\n            .catch(error => {\r\n                this.setState({loading: false});\r\n            });\r\n    }\r\n\r\n    render () {\r\n        const formElementsArray = [];\r\n        for (var key in this.state.orderForm) {\r\n            formElementsArray.push({\r\n                id: key,\r\n                config: this.state.orderForm[key]\r\n            });\r\n        }\r\n        let form =(\r\n            <form>\r\n                    {formElementsArray.map(formElement => (\r\n                        <Input \r\n                           \r\n                            elementType={formElement.config.elementType}\r\n                            elementConfig={formElement.config.elementConfig}\r\n                            value={formElement.config.value} />\r\n                    ))}\r\n                    <Button btnType=\"Success\" clicked={this.orderHandler}>ORDER</Button>\r\n            </form>\r\n        );\r\n        if(this.state.loading) {\r\n            form = <Spinner />;\r\n        }\r\n        return (\r\n            <div className={classes.ContactData}>\r\n                <h4>Enter your Contact Data</h4>\r\n                {form}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ContactData;"]},"metadata":{},"sourceType":"module"}