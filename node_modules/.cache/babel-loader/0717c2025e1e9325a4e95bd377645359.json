{"ast":null,"code":"var _jsxFileName = \"C:\\\\react-projects\\\\burger-builder\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport asyncComponent from './hoc/asyncComponent/asyncComponent';\nimport Layout from './hoc/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Logout from './containers/Auth/Logout/Logout';\nimport * as actions from './store/actions/index';\nconst asyncCheckout = asyncComponent(() => {\n  return import('./containers/Checkout/Checkout');\n});\nconst asyncOrders = asyncComponent(() => {\n  return import('./containers/Orders/Orders');\n});\nconst asyncAuth = asyncComponent(() => {\n  return import('./containers/Auth/Auth');\n});\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onTryAutoSignup();\n  }\n\n  render() {\n    let routes = React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/auth\",\n      component: Auth,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      component: BurgerBuilder,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }));\n\n    if (this.props.isAuthenticated) {\n      routes = React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"/checkout\",\n        component: asyncCheckout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/orders\",\n        component: asyncOrders,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/logout\",\n        component: Logout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/auth\",\n        component: asyncAuth,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/\",\n        exact: true,\n        component: BurgerBuilder,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, routes));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch(actions.authCheckState())\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));","map":{"version":3,"sources":["C:\\react-projects\\burger-builder\\src\\App.js"],"names":["React","Component","Route","Switch","withRouter","Redirect","connect","asyncComponent","Layout","BurgerBuilder","Logout","actions","asyncCheckout","asyncOrders","asyncAuth","App","componentDidMount","props","onTryAutoSignup","render","routes","Auth","isAuthenticated","mapStateToProps","state","auth","token","mapDispatchToProps","dispatch","authCheckState"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport asyncComponent from './hoc/asyncComponent/asyncComponent';\n\n\nimport Layout from './hoc/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Logout from './containers/Auth/Logout/Logout'; \nimport * as actions from './store/actions/index';\n\nconst asyncCheckout = asyncComponent(() => {\n  return import('./containers/Checkout/Checkout');\n});\n\nconst asyncOrders = asyncComponent(() => {\n  return import('./containers/Orders/Orders');\n});\n\nconst asyncAuth = asyncComponent(() => {\n  return import('./containers/Auth/Auth');\n});\n\n\nclass App extends Component{\n \n  componentDidMount() {\n    this.props.onTryAutoSignup();\n  }\n\n  render(){\n    let routes = (\n      <Switch>\n        <Route path=\"/auth\" component={Auth}/>\n        <Route path=\"/\" exact component={BurgerBuilder} />\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n\n    if(this.props.isAuthenticated) {\n      routes = (\n        <Switch>\n            <Route path=\"/checkout\" component={asyncCheckout}/>\n            <Route path=\"/orders\" component={asyncOrders}/>\n            <Route path=\"/logout\" component={Logout}/>\n            <Route path=\"/auth\" component={asyncAuth}/>\n            <Route path=\"/\" exact component={BurgerBuilder} />\n            <Redirect to=\"/\" />\n        </Switch>\n      );\n    }\n\n    return (\n      <div>\n        <Layout>\n            {routes}\n        </Layout>\n    \n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch(actions.authCheckState())\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n"]},"metadata":{},"sourceType":"module"}