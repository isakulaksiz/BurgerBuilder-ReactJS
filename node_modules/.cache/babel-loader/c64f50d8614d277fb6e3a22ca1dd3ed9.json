{"ast":null,"code":"var _jsxFileName = \"C:\\\\react-projects\\\\burger-builder\\\\src\\\\containers\\\\Checkout\\\\Checkout.js\";\nimport React, { Component } from 'react';\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport ContactData from './ContactData/ContactData';\nimport * as actions from '../../store/actions/index';\n\nclass Checkout extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.checkoutCancelledHandler = () => {\n      this.props.history.goBack();\n    };\n\n    this.checkoutContinuedHandler = () => {\n      this.props.history.replace('/checkout/contact-data');\n    };\n  }\n\n  componentWillMount() {\n    this.props.onInitPurchase();\n  }\n\n  render() {\n    let summary = React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    });\n\n    if (this.props.ings) {\n      const purchasedRedirect = this.props.purchased ? React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }) : null;\n      summary = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, purchasedRedirect, React.createElement(CheckoutSummary, {\n        ingredients: this.props.ings,\n        checkoutCancelled: this.checkoutCancelledHandler,\n        checkoutContinued: this.checkoutContinuedHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: this.props.match.path + '/contact-data',\n        component: ContactData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }));\n    }\n\n    return summary;\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    ings: state.burgerBuilder.ingredients,\n    purchased: state.order.purchased\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onInitPurchase: () => dispatch(actions.purchaseInit())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Checkout);","map":{"version":3,"sources":["C:\\react-projects\\burger-builder\\src\\containers\\Checkout\\Checkout.js"],"names":["React","Component","CheckoutSummary","Route","Redirect","connect","ContactData","actions","Checkout","checkoutCancelledHandler","props","history","goBack","checkoutContinuedHandler","replace","componentWillMount","onInitPurchase","render","summary","ings","purchasedRedirect","purchased","match","path","mapStateToProps","state","burgerBuilder","ingredients","order","mapDispatchToProps","dispatch","purchaseInit"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,eAAP,MAA4B,wDAA5B;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,2BAAzB;;AAEA,MAAMC,QAAN,SAAuBP,SAAvB,CAAiC;AAAA;AAAA;;AAAA,SAO7BQ,wBAP6B,GAOF,MAAM;AAC7B,WAAKC,KAAL,CAAWC,OAAX,CAAmBC,MAAnB;AACH,KAT4B;;AAAA,SAW7BC,wBAX6B,GAWF,MAAM;AAC7B,WAAKH,KAAL,CAAWC,OAAX,CAAmBG,OAAnB,CAA2B,wBAA3B;AACH,KAb4B;AAAA;;AAG7BC,EAAAA,kBAAkB,GAAG;AACjB,SAAKL,KAAL,CAAWM,cAAX;AACH;;AAUDC,EAAAA,MAAM,GAAI;AACN,QAAIC,OAAO,GAAG,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAd;;AACA,QAAG,KAAKR,KAAL,CAAWS,IAAd,EAAoB;AAChB,YAAMC,iBAAiB,GAAG,KAAKV,KAAL,CAAWW,SAAX,GAAuB,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAvB,GAA4C,IAAtE;AACAH,MAAAA,OAAO,GACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKE,iBADL,EAEI,oBAAC,eAAD;AACI,QAAA,WAAW,EAAE,KAAKV,KAAL,CAAWS,IAD5B;AAEI,QAAA,iBAAiB,EAAE,KAAKV,wBAF5B;AAGI,QAAA,iBAAiB,EAAE,KAAKI,wBAH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAMI,oBAAC,KAAD;AACI,QAAA,IAAI,EAAE,KAAKH,KAAL,CAAWY,KAAX,CAAiBC,IAAjB,GAAwB,eADlC;AAEI,QAAA,SAAS,EAAEjB,WAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANJ,CADJ;AAYH;;AACD,WAAOY,OAAP;AACH;;AAjC4B;;AAoCjC,MAAMM,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHN,IAAAA,IAAI,EAAEM,KAAK,CAACC,aAAN,CAAoBC,WADvB;AAEHN,IAAAA,SAAS,EAAEI,KAAK,CAACG,KAAN,CAAYP;AAFpB,GAAP;AAIH,CALD;;AAOA,MAAMQ,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHd,IAAAA,cAAc,EAAE,MAAMc,QAAQ,CAACvB,OAAO,CAACwB,YAAR,EAAD;AAD3B,GAAP;AAGH,CAJD;;AAMA,eAAe1B,OAAO,CAACmB,eAAD,EAAkBK,kBAAlB,CAAP,CAA6CrB,QAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport ContactData from './ContactData/ContactData';\r\nimport * as actions from '../../store/actions/index';\r\n\r\nclass Checkout extends Component {\r\n        \r\n\r\n    componentWillMount() {\r\n        this.props.onInitPurchase();\r\n    }\r\n\r\n    checkoutCancelledHandler = () => {\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    checkoutContinuedHandler = () => {\r\n        this.props.history.replace('/checkout/contact-data');\r\n    }\r\n\r\n    render () {\r\n        let summary = <Redirect to=\"/\"/>\r\n        if(this.props.ings) {\r\n            const purchasedRedirect = this.props.purchased ? <Redirect to=\"/\"/> : null;\r\n            summary = (\r\n                <div>\r\n                    {purchasedRedirect}\r\n                    <CheckoutSummary \r\n                        ingredients={this.props.ings}\r\n                        checkoutCancelled={this.checkoutCancelledHandler}\r\n                        checkoutContinued={this.checkoutContinuedHandler}/>\r\n                    <Route \r\n                        path={this.props.match.path + '/contact-data'} \r\n                        component={ContactData} />\r\n                </div>\r\n            );\r\n        }\r\n        return summary;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        purchased: state.order.purchased\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onInitPurchase: () => dispatch(actions.purchaseInit())\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Checkout);"]},"metadata":{},"sourceType":"module"}