{"ast":null,"code":"import * as actionTypes from './actionTypes';\nimport axios from 'axios';\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\nexport const authSuccess = (token, userId) => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    idToken: token,\n    userId: userId\n  };\n};\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\nexport const checkAuthTimeout = expirationTime => {\n  return dispatch => {};\n};\nexport const auth = (email, password, isSignUp) => {\n  return dispatch => {\n    dispatch(authStart());\n    const authData = {\n      email: email,\n      password: password,\n      returnSecureToken: true\n    };\n    let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCvofVDxFwNNNqhFKbBb6iAs-H3rDnEgzA';\n\n    if (!isSignUp) {\n      url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCvofVDxFwNNNqhFKbBb6iAs-H3rDnEgzA';\n    }\n\n    axios.post(url, authData).then(response => {\n      console.log(response);\n      dispatch(authSuccess(response.data.idToken, response.data.localId));\n      dispatch(checkAuthTimeout(response.data.expiresIn));\n    }).catch(err => {\n      console.log(err);\n      dispatch(authFail(err.response.data.error));\n    });\n  };\n};","map":{"version":3,"sources":["C:\\react-projects\\burger-builder\\src\\store\\actions\\auth.js"],"names":["actionTypes","axios","authStart","type","AUTH_START","authSuccess","token","userId","AUTH_SUCCESS","idToken","authFail","error","AUTH_FAIL","checkAuthTimeout","expirationTime","dispatch","auth","email","password","isSignUp","authData","returnSecureToken","url","post","then","response","console","log","data","localId","expiresIn","catch","err"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAC3B,SAAO;AACHC,IAAAA,IAAI,EAAEH,WAAW,CAACI;AADf,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC1C,SAAO;AACHJ,IAAAA,IAAI,EAAEH,WAAW,CAACQ,YADf;AAEHC,IAAAA,OAAO,EAAEH,KAFN;AAGHC,IAAAA,MAAM,EAAEA;AAHL,GAAP;AAKH,CANM;AAQP,OAAO,MAAMG,QAAQ,GAAIC,KAAD,IAAW;AAC/B,SAAM;AACFR,IAAAA,IAAI,EAAEH,WAAW,CAACY,SADhB;AAEFD,IAAAA,KAAK,EAAEA;AAFL,GAAN;AAIH,CALM;AAOP,OAAO,MAAME,gBAAgB,GAAIC,cAAD,IAAoB;AAChD,SAAOC,QAAQ,IAAI,CAElB,CAFD;AAGH,CAJM;AAMP,OAAO,MAAMC,IAAI,GAAG,CAACC,KAAD,EAAQC,QAAR,EAAkBC,QAAlB,KAA+B;AAC/C,SAAOJ,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAACb,SAAS,EAAV,CAAR;AACA,UAAMkB,QAAQ,GAAG;AACbH,MAAAA,KAAK,EAAEA,KADM;AAEbC,MAAAA,QAAQ,EAAEA,QAFG;AAGbG,MAAAA,iBAAiB,EAAE;AAHN,KAAjB;AAKA,QAAIC,GAAG,GAAG,uGAAV;;AACA,QAAG,CAACH,QAAJ,EAAc;AACVG,MAAAA,GAAG,GAAG,mHAAN;AACH;;AAEDrB,IAAAA,KAAK,CAACsB,IAAN,CAAWD,GAAX,EAAgBF,QAAhB,EACKI,IADL,CACUC,QAAQ,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAV,MAAAA,QAAQ,CAACV,WAAW,CAACoB,QAAQ,CAACG,IAAT,CAAcnB,OAAf,EAAwBgB,QAAQ,CAACG,IAAT,CAAcC,OAAtC,CAAZ,CAAR;AACAd,MAAAA,QAAQ,CAACF,gBAAgB,CAACY,QAAQ,CAACG,IAAT,CAAcE,SAAf,CAAjB,CAAR;AACH,KALL,EAMKC,KANL,CAMWC,GAAG,IAAI;AACVN,MAAAA,OAAO,CAACC,GAAR,CAAYK,GAAZ;AACAjB,MAAAA,QAAQ,CAACL,QAAQ,CAACsB,GAAG,CAACP,QAAJ,CAAaG,IAAb,CAAkBjB,KAAnB,CAAT,CAAR;AACH,KATL;AAUH,GAtBD;AAuBH,CAxBM","sourcesContent":["import * as actionTypes from './actionTypes';\r\nimport axios from 'axios';\r\n\r\n\r\nexport const authStart = () => {\r\n    return {\r\n        type: actionTypes.AUTH_START\r\n    };\r\n};\r\n\r\nexport const authSuccess = (token, userId) => {\r\n    return {\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        idToken: token,\r\n        userId: userId\r\n    };\r\n};\r\n\r\nexport const authFail = (error) => {\r\n    return{\r\n        type: actionTypes.AUTH_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const checkAuthTimeout = (expirationTime) => {\r\n    return dispatch => {\r\n\r\n    };\r\n};\r\n\r\nexport const auth = (email, password, isSignUp) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        const authData = {\r\n            email: email,\r\n            password: password,\r\n            returnSecureToken: true\r\n        };\r\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCvofVDxFwNNNqhFKbBb6iAs-H3rDnEgzA';\r\n        if(!isSignUp) {\r\n            url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCvofVDxFwNNNqhFKbBb6iAs-H3rDnEgzA';\r\n        }\r\n\r\n        axios.post(url, authData)\r\n            .then(response => {\r\n                console.log(response);\r\n                dispatch(authSuccess(response.data.idToken, response.data.localId));\r\n                dispatch(checkAuthTimeout(response.data.expiresIn));\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                dispatch(authFail(err.response.data.error));\r\n            });\r\n    };\r\n};"]},"metadata":{},"sourceType":"module"}