{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\nconst initialState = {\n  ingredients: null,\n  totalPrice: 4,\n  error: false,\n  building: false\n};\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nconst addIngredient = (state, action) => {\n  const updatedIngredient = {\n    [action.ingredientName]: state.ingredients[action.ingredientName] + 1\n  };\n  const updatedIngredients = updateObject(state.ingredients, updatedIngredient);\n  const updatedState = {\n    ingredients: updatedIngredients,\n    totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\n    building: true\n  };\n  return updateObject(state, updatedState);\n};\n\nconst removeIngredient = (state, action) => {\n  const updatedIng = {\n    [action.ingredientName]: state.ingredients[action.ingredientName] - 1\n  };\n  const updatedIngs = updateObject(state.ingredients, updatedIng);\n  const updatedSt = {\n    ingredients: updatedIngs,\n    totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\n    building: true\n  };\n  return updateObject(state, updatedSt);\n};\n\nconst setIngredients = (state, action) => {\n  return updateObject(state, {\n    ingredients: {\n      salad: action.ingredients.salad,\n      bacon: action.ingredients.bacon,\n      cheese: action.ingredients.cheese,\n      meat: action.ingredients.meat\n    },\n    totalPrice: 4,\n    error: false,\n    building: fasle\n  });\n};\n\nconst fetchIngredientsFailed = (state, action) => {\n  return updateObject(state, {\n    error: true\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_INGREDIENT:\n      return addIngredient(state, action);\n\n    case actionTypes.REMOVE_INGREDIENT:\n      return removeIngredient(state, action);\n\n    case actionTypes.SET_INGREDIENTS:\n      return setIngredients(state, action);\n\n    case actionTypes.FETCH_INGREDIENTS_FAILED:\n      return fetchIngredientsFailed(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:\\react-projects\\burger-builder\\src\\store\\reducers\\burgerBuilder.js"],"names":["actionTypes","updateObject","initialState","ingredients","totalPrice","error","building","INGREDIENT_PRICES","salad","cheese","meat","bacon","addIngredient","state","action","updatedIngredient","ingredientName","updatedIngredients","updatedState","removeIngredient","updatedIng","updatedIngs","updatedSt","setIngredients","fasle","fetchIngredientsFailed","reducer","type","ADD_INGREDIENT","REMOVE_INGREDIENT","SET_INGREDIENTS","FETCH_INGREDIENTS_FAILED"],"mappings":"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","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../utility';\r\n\r\n\r\nconst initialState = {\r\n    ingredients: null,\r\n    totalPrice: 4,\r\n    error: false,\r\n    building: false\r\n};\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7\r\n};\r\n\r\nconst addIngredient = (state, action) => {\r\n    const updatedIngredient = {[action.ingredientName]: state.ingredients[action.ingredientName] + 1}\r\n    const updatedIngredients = updateObject(state.ingredients, updatedIngredient);\r\n    const updatedState = {\r\n        ingredients: updatedIngredients,\r\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\r\n        building: true\r\n    };\r\n    return updateObject(state, updatedState);\r\n};\r\n\r\nconst removeIngredient = (state, action) => {\r\n    const updatedIng = {[action.ingredientName]: state.ingredients[action.ingredientName] - 1}\r\n    const updatedIngs = updateObject(state.ingredients, updatedIng);\r\n    const updatedSt = {\r\n        ingredients: updatedIngs,\r\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\r\n        building: true\r\n    };\r\n    return updateObject(state, updatedSt);\r\n};\r\n\r\nconst setIngredients = (state, action) => {\r\n    return updateObject(state, {\r\n        ingredients: {\r\n            salad: action.ingredients.salad,\r\n            bacon: action.ingredients.bacon,\r\n            cheese: action.ingredients.cheese,\r\n            meat: action.ingredients.meat\r\n        },\r\n        totalPrice: 4,\r\n        error: false,\r\n        building: fasle\r\n    });\r\n};\r\n\r\nconst fetchIngredientsFailed = (state, action) => {\r\n    return updateObject(state, {error: true});\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case actionTypes.ADD_INGREDIENT:    return addIngredient(state, action);            \r\n        case actionTypes.REMOVE_INGREDIENT: return removeIngredient(state, action);\r\n        case actionTypes.SET_INGREDIENTS:   return setIngredients(state, action);    \r\n        case actionTypes.FETCH_INGREDIENTS_FAILED: return fetchIngredientsFailed(state, action);\r\n        default:    return state;\r\n    }\r\n};\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}