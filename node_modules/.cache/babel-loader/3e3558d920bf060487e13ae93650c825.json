{"ast":null,"code":"import _defineProperty from \"C:\\\\react-projects\\\\burger-builder\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\react-projects\\\\burger-builder\\\\src\\\\containers\\\\BurgerBuilder\\\\BurgerBuilder.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport Aux from '../../hoc/Auxiliary/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport axios from '../../axios-orders';\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: null,\n      totalPrice: 4,\n      purchasable: false,\n      purchasing: false,\n      loading: false,\n      error: false\n    };\n\n    this.addIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updatedCount = oldCount + 1;\n\n      const updatedIngredients = _objectSpread({}, this.state.ingredients);\n\n      updatedIngredients[type] = updatedCount;\n      const priceAddition = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice + priceAddition;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.removeIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n\n      if (oldCount <= 0) {\n        return;\n      }\n\n      const updatedCount = oldCount - 1;\n\n      const updatedIngredients = _objectSpread({}, this.state.ingredients);\n\n      updatedIngredients[type] = updatedCount;\n      const priceDeduction = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice - priceDeduction;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.purchaseHandler = () => {\n      this.setState({\n        purchasing: true\n      });\n    };\n\n    this.purchaseCancelHandler = () => {\n      this.setState({\n        purchasing: false\n      });\n    };\n\n    this.purchaseContinueHandler = () => {\n      // alert('You continue!');\n      const queryParams = [];\n\n      for (var i in this.state.ingredients) {\n        queryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.state.ingredients[i]));\n      }\n\n      queryParams.push('price=' + this.state.totalPrice);\n      const queryString = queryParams.join('&');\n      this.props.history.push({\n        pathname: '/checkout',\n        search: '?' + queryString\n      });\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props);\n    /*\r\n    axios.get( 'https://burger-builder-49e1a.firebaseio.com/ingredients.json' )\r\n        .then( response => {\r\n            this.setState( { ingredients: response.data } );\r\n        } )\r\n        .catch( error => {\r\n            this.setState( { error: true } );\r\n        } );\r\n        */\n  }\n\n  updatePurchaseState(ingredients) {\n    const sum = Object.keys(ingredients).map(igKey => {\n      return ingredients[igKey];\n    }).reduce((sum, el) => {\n      return sum + el;\n    }, 0);\n    this.setState({\n      purchasable: sum > 0\n    });\n  }\n\n  render() {\n    const disabledInfo = _objectSpread({}, this.state.ingredients);\n\n    for (var key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    let orderSummary = null;\n    let burger = this.state.error ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Ingredients can't be loaded!\") : React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    });\n\n    if (this.state.ingredients) {\n      burger = React.createElement(Aux, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(Burger, {\n        ingredients: this.state.ingredients,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }), React.createElement(BuildControls, {\n        ingredientAdded: this.addIngredientHandler,\n        ingredientRemoved: this.removeIngredientHandler,\n        disabled: disabledInfo,\n        purchasable: this.state.purchasable,\n        ordered: this.purchaseHandler,\n        price: this.state.totalPrice,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }));\n      orderSummary = React.createElement(OrderSummary, {\n        ingredients: this.state.ingredients,\n        price: this.state.totalPrice,\n        purchaseCancelled: this.purchaseCancelHandler,\n        purchaseContinued: this.purchaseContinueHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      });\n    }\n\n    if (this.state.loading) {\n      orderSummary = React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      });\n    } // {salad: true, meat: false, ...}\n\n\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      show: this.state.purchasing,\n      modalClosed: this.purchaseCancelHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, orderSummary), burger);\n  }\n\n}\n\nexport default withErrorHandler(BurgerBuilder, axios);","map":{"version":3,"sources":["C:\\react-projects\\burger-builder\\src\\containers\\BurgerBuilder\\BurgerBuilder.js"],"names":["React","Component","Aux","Burger","BuildControls","Modal","OrderSummary","Spinner","withErrorHandler","axios","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","state","ingredients","totalPrice","purchasable","purchasing","loading","error","addIngredientHandler","type","oldCount","updatedCount","updatedIngredients","priceAddition","oldPrice","newPrice","setState","updatePurchaseState","removeIngredientHandler","priceDeduction","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","queryParams","i","push","encodeURIComponent","queryString","join","props","history","pathname","search","componentDidMount","console","log","sum","Object","keys","map","igKey","reduce","el","render","disabledInfo","key","orderSummary","burger"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport Aux from '../../hoc/Auxiliary/Aux';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport axios from '../../axios-orders';\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7\r\n};\r\n\r\nclass BurgerBuilder extends Component {\r\n    // constructor(props) {\r\n    //     super(props);\r\n    //     this.state = {...}\r\n    // }\r\n    state = {\r\n        ingredients: null,\r\n        totalPrice: 4,\r\n        purchasable: false,\r\n        purchasing: false,\r\n        loading: false,\r\n        error: false\r\n    }\r\n\r\n    componentDidMount () {\r\n        console.log(this.props);\r\n        /*\r\n        axios.get( 'https://burger-builder-49e1a.firebaseio.com/ingredients.json' )\r\n            .then( response => {\r\n                this.setState( { ingredients: response.data } );\r\n            } )\r\n            .catch( error => {\r\n                this.setState( { error: true } );\r\n            } );\r\n            */\r\n    }\r\n\r\n    updatePurchaseState ( ingredients ) {\r\n        const sum = Object.keys( ingredients )\r\n            .map( igKey => {\r\n                return ingredients[igKey];\r\n            } )\r\n            .reduce( ( sum, el ) => {\r\n                return sum + el;\r\n            }, 0 );\r\n        this.setState( { purchasable: sum > 0 } );\r\n    }\r\n\r\n    addIngredientHandler = ( type ) => {\r\n        const oldCount = this.state.ingredients[type];\r\n        const updatedCount = oldCount + 1;\r\n        const updatedIngredients = {\r\n            ...this.state.ingredients\r\n        };\r\n        updatedIngredients[type] = updatedCount;\r\n        const priceAddition = INGREDIENT_PRICES[type];\r\n        const oldPrice = this.state.totalPrice;\r\n        const newPrice = oldPrice + priceAddition;\r\n        this.setState( { totalPrice: newPrice, ingredients: updatedIngredients } );\r\n        this.updatePurchaseState( updatedIngredients );\r\n    }\r\n\r\n    removeIngredientHandler = ( type ) => {\r\n        const oldCount = this.state.ingredients[type];\r\n        if ( oldCount <= 0 ) {\r\n            return;\r\n        }\r\n        const updatedCount = oldCount - 1;\r\n        const updatedIngredients = {\r\n            ...this.state.ingredients\r\n        };\r\n        updatedIngredients[type] = updatedCount;\r\n        const priceDeduction = INGREDIENT_PRICES[type];\r\n        const oldPrice = this.state.totalPrice;\r\n        const newPrice = oldPrice - priceDeduction;\r\n        this.setState( { totalPrice: newPrice, ingredients: updatedIngredients } );\r\n        this.updatePurchaseState( updatedIngredients );\r\n    }\r\n\r\n    purchaseHandler = () => {\r\n        this.setState( { purchasing: true } );\r\n    }\r\n\r\n    purchaseCancelHandler = () => {\r\n        this.setState( { purchasing: false } );\r\n    }\r\n\r\n    purchaseContinueHandler = () => {\r\n        // alert('You continue!');\r\n        \r\n        const queryParams = [];\r\n        for (var i in this.state.ingredients) {\r\n            queryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.state.ingredients[i]));\r\n        }\r\n        queryParams.push('price=' + this.state.totalPrice);\r\n        const queryString = queryParams.join('&');\r\n        this.props.history.push({\r\n            pathname: '/checkout',\r\n            search: '?' + queryString\r\n        });\r\n    }\r\n\r\n    render () {\r\n        const disabledInfo = {\r\n            ...this.state.ingredients\r\n        };\r\n        for ( var key in disabledInfo ) {\r\n            disabledInfo[key] = disabledInfo[key] <= 0\r\n        }\r\n        let orderSummary = null;\r\n        let burger = this.state.error ? <p>Ingredients can't be loaded!</p> : <Spinner />;\r\n\r\n        if ( this.state.ingredients ) {\r\n            burger = (\r\n                <Aux>\r\n                    <Burger ingredients={this.state.ingredients} />\r\n                    <BuildControls\r\n                        ingredientAdded={this.addIngredientHandler}\r\n                        ingredientRemoved={this.removeIngredientHandler}\r\n                        disabled={disabledInfo}\r\n                        purchasable={this.state.purchasable}\r\n                        ordered={this.purchaseHandler}\r\n                        price={this.state.totalPrice} />\r\n                </Aux>\r\n            );\r\n            orderSummary = <OrderSummary\r\n                ingredients={this.state.ingredients}\r\n                price={this.state.totalPrice}\r\n                purchaseCancelled={this.purchaseCancelHandler}\r\n                purchaseContinued={this.purchaseContinueHandler} />;\r\n        }\r\n        if ( this.state.loading ) {\r\n            orderSummary = <Spinner />;\r\n        }\r\n        // {salad: true, meat: false, ...}\r\n        return (\r\n            <Aux>\r\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\r\n                    {orderSummary}\r\n                </Modal>\r\n                {burger}\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withErrorHandler( BurgerBuilder, axios );"]},"metadata":{},"sourceType":"module"}