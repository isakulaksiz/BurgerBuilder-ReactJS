{"ast":null,"code":"import _defineProperty from \"C:\\\\react-projects\\\\burger-builder\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as actionTypes from '../actions/actionTypes';\nconst initialState = {\n  orders: [],\n  loading: false,\n  purchased: false\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.PURCHASE_INIT:\n      return _objectSpread({}, state, {\n        purchased: false\n      });\n\n    case actionTypes.PURCHASE_BURGER_START:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    case actionTypes.PURCHASE_BURGER_SUCCESS:\n      const newOrder = _objectSpread({}, action.orderData, {\n        id: action.orderId\n      });\n\n      return _objectSpread({}, state, {\n        loading: false,\n        purchased: true,\n        orders: state.orders.concat(newOrder)\n      });\n\n    case actionTypes.PURCHASE_BURGER_FAIL:\n      return _objectSpread({}, state, {\n        loading: false\n      });\n\n    case actionTypes.FETCH_ORDERS_START:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    case actionTypes.FETCH_ORDERS_SUCCESS:\n      return _objectSpread({}, state, {\n        orders: action.orders,\n        loading: false\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:\\react-projects\\burger-builder\\src\\store\\reducers\\order.js"],"names":["actionTypes","initialState","orders","loading","purchased","reducer","state","action","type","PURCHASE_INIT","PURCHASE_BURGER_START","PURCHASE_BURGER_SUCCESS","newOrder","orderData","id","orderId","concat","PURCHASE_BURGER_FAIL","FETCH_ORDERS_START","FETCH_ORDERS_SUCCESS"],"mappings":";;;;;;AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE,EADS;AAEjBC,EAAAA,OAAO,EAAE,KAFQ;AAGjBC,EAAAA,SAAS,EAAE;AAHM,CAArB;;AAMA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AAC9C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKR,WAAW,CAACS,aAAjB;AACI,+BACOH,KADP;AAEIF,QAAAA,SAAS,EAAE;AAFf;;AAIJ,SAAKJ,WAAW,CAACU,qBAAjB;AACI,+BACOJ,KADP;AAEIH,QAAAA,OAAO,EAAE;AAFb;;AAIJ,SAAKH,WAAW,CAACW,uBAAjB;AACI,YAAMC,QAAQ,qBACPL,MAAM,CAACM,SADA;AAEVC,QAAAA,EAAE,EAAEP,MAAM,CAACQ;AAFD,QAAd;;AAIA,+BACOT,KADP;AAEIH,QAAAA,OAAO,EAAE,KAFb;AAGIC,QAAAA,SAAS,EAAE,IAHf;AAIIF,QAAAA,MAAM,EAAEI,KAAK,CAACJ,MAAN,CAAac,MAAb,CAAoBJ,QAApB;AAJZ;;AAMJ,SAAKZ,WAAW,CAACiB,oBAAjB;AACI,+BACOX,KADP;AAEIH,QAAAA,OAAO,EAAE;AAFb;;AAIJ,SAAKH,WAAW,CAACkB,kBAAjB;AACI,+BACOZ,KADP;AAEIH,QAAAA,OAAO,EAAE;AAFb;;AAIJ,SAAKH,WAAW,CAACmB,oBAAjB;AACI,+BACOb,KADP;AAEIJ,QAAAA,MAAM,EAAEK,MAAM,CAACL,MAFnB;AAGIC,QAAAA,OAAO,EAAE;AAHb;;AAKJ;AACI,aAAOG,KAAP;AAvCR;AAyCH,CA1CD;;AA4CA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    orders: [],\r\n    loading: false,\r\n    purchased: false\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case actionTypes.PURCHASE_INIT:\r\n            return {\r\n                ...state,\r\n                purchased: false\r\n            };\r\n        case actionTypes.PURCHASE_BURGER_START:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        case actionTypes.PURCHASE_BURGER_SUCCESS:\r\n            const newOrder = {\r\n                ...action.orderData,\r\n                id: action.orderId\r\n            };\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                purchased: true,\r\n                orders: state.orders.concat(newOrder)\r\n            };\r\n        case actionTypes.PURCHASE_BURGER_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false \r\n            };\r\n        case actionTypes.FETCH_ORDERS_START:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        case actionTypes.FETCH_ORDERS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                orders: action.orders,\r\n                loading: false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}