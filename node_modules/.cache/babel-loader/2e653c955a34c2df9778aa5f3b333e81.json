{"ast":null,"code":"import _defineProperty from \"C:\\\\react-projects\\\\burger-builder\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport const updateObject = (oldObject, updatedProperties) => {\n  return _objectSpread({}, oldObject, {}, updatedProperties);\n};\nexport const checkValidity = (value, rules) => {\n  let isValid = true;\n\n  if (!rules) {\n    return true;\n  }\n\n  if (rules.required) {\n    isValid = value.trim() !== '' && isValid;\n  }\n\n  if (rules.minLength) {\n    isValid = value.length >= rules.minLength && isValid;\n  }\n\n  if (rules.maxLength) {\n    isValid = value.length <= rules.maxLength && isValid;\n  }\n\n  if (rules.isEmail) {\n    const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n    isValid = pattern.test(value) && isValid;\n  }\n\n  if (rules.isNumeric) {\n    const pattern = /^\\d+$/;\n    isValid = pattern.test(value) && isValid;\n  }\n\n  return isValid;\n};","map":{"version":3,"sources":["C:\\react-projects\\burger-builder\\src\\shared\\utility.js"],"names":["updateObject","oldObject","updatedProperties","checkValidity","value","rules","isValid","required","trim","minLength","length","maxLength","isEmail","pattern","test","isNumeric"],"mappings":";;;;;;AAAA,OAAO,MAAMA,YAAY,GAAG,CAACC,SAAD,EAAYC,iBAAZ,KAAkC;AAC1D,2BACOD,SADP,MAEOC,iBAFP;AAIH,CALM;AAOP,OAAO,MAAMC,aAAa,GAAG,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC3C,MAAIC,OAAO,GAAG,IAAd;;AACA,MAAI,CAACD,KAAL,EAAY;AACR,WAAO,IAAP;AACH;;AAED,MAAIA,KAAK,CAACE,QAAV,EAAoB;AAChBD,IAAAA,OAAO,GAAGF,KAAK,CAACI,IAAN,OAAiB,EAAjB,IAAuBF,OAAjC;AACH;;AAED,MAAID,KAAK,CAACI,SAAV,EAAqB;AACjBH,IAAAA,OAAO,GAAGF,KAAK,CAACM,MAAN,IAAgBL,KAAK,CAACI,SAAtB,IAAmCH,OAA7C;AACH;;AAED,MAAID,KAAK,CAACM,SAAV,EAAqB;AACjBL,IAAAA,OAAO,GAAGF,KAAK,CAACM,MAAN,IAAgBL,KAAK,CAACM,SAAtB,IAAmCL,OAA7C;AACH;;AAED,MAAID,KAAK,CAACO,OAAV,EAAmB;AACf,UAAMC,OAAO,GAAG,uIAAhB;AACAP,IAAAA,OAAO,GAAGO,OAAO,CAACC,IAAR,CAAaV,KAAb,KAAuBE,OAAjC;AACH;;AAED,MAAID,KAAK,CAACU,SAAV,EAAqB;AACjB,UAAMF,OAAO,GAAG,OAAhB;AACAP,IAAAA,OAAO,GAAGO,OAAO,CAACC,IAAR,CAAaV,KAAb,KAAuBE,OAAjC;AACH;;AAED,SAAOA,OAAP;AACH,CA7BM","sourcesContent":["export const updateObject = (oldObject, updatedProperties) => {\r\n    return {\r\n        ...oldObject,\r\n        ...updatedProperties\r\n    };\r\n};\r\n\r\nexport const checkValidity = (value, rules) => {\r\n    let isValid = true;\r\n    if (!rules) {\r\n        return true;\r\n    }\r\n    \r\n    if (rules.required) {\r\n        isValid = value.trim() !== '' && isValid;\r\n    }\r\n\r\n    if (rules.minLength) {\r\n        isValid = value.length >= rules.minLength && isValid\r\n    }\r\n\r\n    if (rules.maxLength) {\r\n        isValid = value.length <= rules.maxLength && isValid\r\n    }\r\n\r\n    if (rules.isEmail) {\r\n        const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n        isValid = pattern.test(value) && isValid\r\n    }\r\n\r\n    if (rules.isNumeric) {\r\n        const pattern = /^\\d+$/;\r\n        isValid = pattern.test(value) && isValid\r\n    }\r\n\r\n    return isValid;\r\n}"]},"metadata":{},"sourceType":"module"}