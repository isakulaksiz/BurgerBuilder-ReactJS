{"ast":null,"code":"var _jsxFileName = \"C:\\\\react-projects\\\\burger-builder\\\\src\\\\components\\\\Order\\\\Order.js\";\nimport React from 'react';\nimport classes from './Order.css';\n\nconst order = props => {\n  const ingredients = [];\n\n  for (var ingredientName in props.ingredients) {\n    ingredients.push({\n      name: ingredientName,\n      amount: props.ingredients[ingredientName]\n    });\n  }\n\n  const ingredientOutput = ingredients.map(ig => {\n    return React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, ig.name, \" (\", ig.amount, \")\");\n  });\n  return React.createElement(\"div\", {\n    className: classes.Order,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Ingredients: \", ingredientOutput), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Price: \", React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"USD \", Number.parseFloat(props.price).toFixed(2))));\n};\n\nexport default order;","map":{"version":3,"sources":["C:\\react-projects\\burger-builder\\src\\components\\Order\\Order.js"],"names":["React","classes","order","props","ingredients","ingredientName","push","name","amount","ingredientOutput","map","ig","Order","Number","parseFloat","price","toFixed"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,aAApB;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAErB,QAAMC,WAAW,GAAG,EAApB;;AACA,OAAI,IAAIC,cAAR,IAA0BF,KAAK,CAACC,WAAhC,EAA6C;AACzCA,IAAAA,WAAW,CAACE,IAAZ,CACI;AAAIC,MAAAA,IAAI,EAAEF,cAAV;AACIG,MAAAA,MAAM,EAAEL,KAAK,CAACC,WAAN,CAAkBC,cAAlB;AADZ,KADJ;AAKH;;AAED,QAAMI,gBAAgB,GAAGL,WAAW,CAACM,GAAZ,CAAgBC,EAAE,IAAI;AAC3C,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOA,EAAE,CAACJ,IAAV,QAAkBI,EAAE,CAACH,MAArB,MAAP;AACH,GAFwB,CAAzB;AAIA,SACE;AAAK,IAAA,SAAS,EAAEP,OAAO,CAACW,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAiBH,gBAAjB,CADN,EAEM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAaI,MAAM,CAACC,UAAP,CAAkBX,KAAK,CAACY,KAAxB,EAA+BC,OAA/B,CAAuC,CAAvC,CAAb,CAAV,CAFN,CADF;AAOH,CAtBD;;AAwBA,eAAed,KAAf","sourcesContent":["import React from 'react';\r\nimport classes from './Order.css';\r\n\r\nconst order = (props) => {\r\n    \r\n    const ingredients = [];\r\n    for(var ingredientName in props.ingredients) {\r\n        ingredients.push(\r\n            {   name: ingredientName,\r\n                amount: props.ingredients[ingredientName]\r\n            }\r\n        );\r\n    }\r\n\r\n    const ingredientOutput = ingredients.map(ig => {\r\n        return <span>{ig.name} ({ig.amount})</span>;\r\n    });\r\n\r\n    return (\r\n      <div className={classes.Order}>\r\n            <p>Ingredients: {ingredientOutput}</p>\r\n            <p>Price: <strong>USD {Number.parseFloat(props.price).toFixed(2)}</strong></p>\r\n        </div>\r\n    );\r\n    \r\n};\r\n\r\nexport default order;"]},"metadata":{},"sourceType":"module"}