{"ast":null,"code":"var _jsxFileName = \"C:\\\\react-projects\\\\burger-builder\\\\src\\\\hoc\\\\Layout\\\\Layout.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Aux from '../Auxiliary/Aux';\nimport classes from './Layout.css';\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\n\nclass Layout extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showSideDrawer: false\n    };\n\n    this.sideDrawerClosedHandler = () => {\n      this.setState({\n        showSideDrawer: false\n      });\n    };\n\n    this.sideDrawerToggleHandler = () => {\n      this.setState(prevState => {\n        return {\n          showSideDrawer: !prevState.showSideDrawer\n        };\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(Toolbar, {\n      isAuth: this.props.isAuthenticated,\n      drawerToggleClicked: this.sideDrawerToggleHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), React.createElement(SideDrawer, {\n      open: this.state.showSideDrawer,\n      isAuth: this.props.isAuthenticated,\n      closed: this.sideDrawerClosedHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), React.createElement(\"main\", {\n      className: classes.Content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, this.props.children));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token != null\n  };\n};\n\nexport default connect(mapStateToProps)(Layout);","map":{"version":3,"sources":["C:\\react-projects\\burger-builder\\src\\hoc\\Layout\\Layout.js"],"names":["React","Component","connect","Aux","classes","Toolbar","SideDrawer","Layout","state","showSideDrawer","sideDrawerClosedHandler","setState","sideDrawerToggleHandler","prevState","render","props","isAuthenticated","Content","children","mapStateToProps","auth","token"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,OAAOC,OAAP,MAAoB,6CAApB;AACA,OAAOC,UAAP,MAAuB,mDAAvB;;AAEA,MAAMC,MAAN,SAAqBN,SAArB,CAA+B;AAAA;AAAA;AAAA,SAE3BO,KAF2B,GAEnB;AACJC,MAAAA,cAAc,EAAE;AADZ,KAFmB;;AAAA,SAM3BC,uBAN2B,GAMD,MAAM;AAC5B,WAAKC,QAAL,CAAc;AAACF,QAAAA,cAAc,EAAE;AAAjB,OAAd;AACH,KAR0B;;AAAA,SAU3BG,uBAV2B,GAUD,MAAM;AAC5B,WAAKD,QAAL,CAAeE,SAAD,IAAe;AACzB,eAAO;AAACJ,UAAAA,cAAc,EAAE,CAACI,SAAS,CAACJ;AAA5B,SAAP;AACH,OAFD;AAGH,KAd0B;AAAA;;AAgB3BK,EAAAA,MAAM,GAAE;AACJ,WACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,OAAD;AACI,MAAA,MAAM,EAAE,KAAKC,KAAL,CAAWC,eADvB;AAEI,MAAA,mBAAmB,EAAE,KAAKJ,uBAF9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAII,oBAAC,UAAD;AACI,MAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWC,cADrB;AAEI,MAAA,MAAM,EAAE,KAAKM,KAAL,CAAWC,eAFvB;AAGI,MAAA,MAAM,EAAE,KAAKN,uBAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAQI;AAAM,MAAA,SAAS,EAAEN,OAAO,CAACa,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKF,KAAL,CAAWG,QADhB,CARJ,CADJ;AAcH;;AA/B0B;;AAkC/B,MAAMC,eAAe,GAAGX,KAAK,IAAI;AAC7B,SAAO;AACHQ,IAAAA,eAAe,EAAER,KAAK,CAACY,IAAN,CAAWC,KAAX,IAAoB;AADlC,GAAP;AAGH,CAJD;;AAMA,eAAenB,OAAO,CAACiB,eAAD,CAAP,CAAyBZ,MAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Aux from '../Auxiliary/Aux';\r\nimport classes from './Layout.css';\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\r\n\r\nclass Layout extends Component {\r\n\r\n    state = {\r\n        showSideDrawer: false\r\n    }\r\n\r\n    sideDrawerClosedHandler = () => {\r\n        this.setState({showSideDrawer: false});        \r\n    }\r\n\r\n    sideDrawerToggleHandler = () => {\r\n        this.setState((prevState) => {\r\n            return {showSideDrawer: !prevState.showSideDrawer};\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Aux>\r\n                <Toolbar \r\n                    isAuth={this.props.isAuthenticated}\r\n                    drawerToggleClicked={this.sideDrawerToggleHandler}/>\r\n                <SideDrawer \r\n                    open={this.state.showSideDrawer} \r\n                    isAuth={this.props.isAuthenticated}\r\n                    closed={this.sideDrawerClosedHandler}/>\r\n                <main className={classes.Content}>\r\n                    {this.props.children}\r\n                </main>\r\n            </Aux>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isAuthenticated: state.auth.token != null\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Layout);\r\n"]},"metadata":{},"sourceType":"module"}