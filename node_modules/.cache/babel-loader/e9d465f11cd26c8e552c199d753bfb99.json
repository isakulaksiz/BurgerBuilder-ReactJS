{"ast":null,"code":"import _defineProperty from \"C:\\\\react-projects\\\\burger-builder\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\react-projects\\\\burger-builder\\\\src\\\\containers\\\\BurgerBuilder\\\\BurgerBuilder.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport Aux from '../../hoc/Auxiliary/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport axios from '../../axios-orders';\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: null,\n      totalPrice: 4,\n      purchasable: false,\n      purchasing: false,\n      loading: false\n    };\n\n    this.addIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updatedCount = oldCount + 1;\n\n      const updatedIngredients = _objectSpread({}, this.state.ingredients);\n\n      updatedIngredients[type] = updatedCount;\n      const priceAddition = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice + priceAddition;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.removeIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n\n      if (oldCount <= 0) {\n        return;\n      }\n\n      const updatedCount = oldCount - 1;\n\n      const updatedIngredients = _objectSpread({}, this.state.ingredients);\n\n      updatedIngredients[type] = updatedCount;\n      const priceDeduction = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice - priceDeduction;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.purchaseHandler = () => {\n      this.setState({\n        purchasing: true\n      });\n    };\n\n    this.purchaseCancelHandler = () => {\n      this.setState({\n        purchasing: false\n      });\n    };\n\n    this.purchaseContinueHandler = () => {\n      //alert('You continue!');\n      this.setState({\n        loading: true\n      });\n      const order = {\n        ingredients: this.state.ingredients,\n        price: this.state.totalPrice,\n        customer: {\n          name: 'İsa Kulaksız',\n          address: {\n            street: 'İstanbul',\n            zipCode: '25500',\n            country: 'Turkey'\n          },\n          email: 'isakulaksiz@outlook.com'\n        },\n        deliveryMethod: 'fastest'\n      };\n      axios.post('/orders.json', order).then(response => {\n        this.setState({\n          loading: false,\n          purchasing: false\n        });\n      }).catch(error => {\n        this.setState({\n          loading: false,\n          purchasing: false\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    axios.get('https://burger-builder-49e1a.firebaseio.com/ingrediens.json').then(response => {\n      this.setState({\n        ingredients: response.data\n      });\n    });\n  }\n\n  updatePurchaseState(ingredients) {\n    const sum = Object.keys(ingredients).map(igKey => {\n      return ingredients[igKey];\n    }).reduce((sum, el) => {\n      return sum + el;\n    }, 0);\n    this.setState({\n      purchasable: sum > 0\n    });\n  }\n\n  render() {\n    const disabledInfo = _objectSpread({}, this.state.ingredients);\n\n    for (var key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    let orderSummary = React.createElement(OrderSummary, {\n      ingredients: this.state.ingredients,\n      price: this.state.totalPrice,\n      purchaseCancelled: this.purchaseCancelHandler,\n      purchaseContinued: this.purchaseContinueHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    });\n\n    if (this.state.loading) {\n      orderSummary = React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      });\n    }\n\n    let burger = React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    });\n\n    if (this.state.ingredients) {\n      burger = React.createElement(Aux, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(Burger, {\n        ingredients: this.state.ingredients,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }), React.createElement(BuildControls, {\n        ingredientAdded: this.addIngredientHandler,\n        ingredientRemoved: this.removeIngredientHandler,\n        disabled: disabledInfo,\n        purchasable: this.state.purchasable,\n        ordered: this.purchaseHandler,\n        price: this.state.totalPrice,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }));\n    } // {salad: true, meat: false ....}\n\n\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      show: this.state.purchasing,\n      modalClosed: this.purchaseCancelHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, orderSummary), burger);\n  }\n\n}\n\nexport default withErrorHandler(BurgerBuilder, axios);","map":{"version":3,"sources":["C:\\react-projects\\burger-builder\\src\\containers\\BurgerBuilder\\BurgerBuilder.js"],"names":["React","Component","Aux","Burger","BuildControls","Modal","OrderSummary","Spinner","withErrorHandler","axios","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","state","ingredients","totalPrice","purchasable","purchasing","loading","addIngredientHandler","type","oldCount","updatedCount","updatedIngredients","priceAddition","oldPrice","newPrice","setState","updatePurchaseState","removeIngredientHandler","priceDeduction","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","order","price","customer","name","address","street","zipCode","country","email","deliveryMethod","post","then","response","catch","error","componentDidMount","get","data","sum","Object","keys","map","igKey","reduce","el","render","disabledInfo","key","orderSummary","burger"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,yBAAhB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,aAAP,MAA0B,qDAA1B;AACA,OAAOC,KAAP,MAAkB,iCAAlB;AACA,OAAOC,YAAP,MAAyB,mDAAzB;AACA,OAAOC,OAAP,MAAoB,qCAApB;AACA,OAAOC,gBAAP,MAA6B,6CAA7B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAGA,MAAMC,iBAAiB,GAAG;AACtBC,EAAAA,KAAK,EAAE,GADe;AAEtBC,EAAAA,MAAM,EAAE,GAFc;AAGtBC,EAAAA,IAAI,EAAE,GAHgB;AAItBC,EAAAA,KAAK,EAAE;AAJe,CAA1B;;AAOA,MAAMC,aAAN,SAA4Bd,SAA5B,CAAsC;AAAA;AAAA;AAAA,SAOlCe,KAPkC,GAO1B;AACJC,MAAAA,WAAW,EAAE,IADT;AAEJC,MAAAA,UAAU,EAAE,CAFR;AAGJC,MAAAA,WAAW,EAAE,KAHT;AAIJC,MAAAA,UAAU,EAAE,KAJR;AAKJC,MAAAA,OAAO,EAAE;AALL,KAP0B;;AAAA,SAiClCC,oBAjCkC,GAiCVC,IAAD,IAAU;AAC7B,YAAMC,QAAQ,GAAG,KAAKR,KAAL,CAAWC,WAAX,CAAuBM,IAAvB,CAAjB;AACA,YAAME,YAAY,GAAGD,QAAQ,GAAG,CAAhC;;AACA,YAAME,kBAAkB,qBACjB,KAAKV,KAAL,CAAWC,WADM,CAAxB;;AAGAS,MAAAA,kBAAkB,CAACH,IAAD,CAAlB,GAA2BE,YAA3B;AACA,YAAME,aAAa,GAAGjB,iBAAiB,CAACa,IAAD,CAAvC;AACA,YAAMK,QAAQ,GAAG,KAAKZ,KAAL,CAAWE,UAA5B;AACA,YAAMW,QAAQ,GAAGD,QAAQ,GAAGD,aAA5B;AACA,WAAKG,QAAL,CAAc;AAACZ,QAAAA,UAAU,EAAEW,QAAb;AAAuBZ,QAAAA,WAAW,EAAES;AAApC,OAAd;AACA,WAAKK,mBAAL,CAAyBL,kBAAzB;AACH,KA7CiC;;AAAA,SA+ClCM,uBA/CkC,GA+CPT,IAAD,IAAU;AAChC,YAAMC,QAAQ,GAAG,KAAKR,KAAL,CAAWC,WAAX,CAAuBM,IAAvB,CAAjB;;AACA,UAAIC,QAAQ,IAAI,CAAhB,EAAkB;AACd;AACH;;AACD,YAAMC,YAAY,GAAGD,QAAQ,GAAG,CAAhC;;AACA,YAAME,kBAAkB,qBACjB,KAAKV,KAAL,CAAWC,WADM,CAAxB;;AAGAS,MAAAA,kBAAkB,CAACH,IAAD,CAAlB,GAA2BE,YAA3B;AACA,YAAMQ,cAAc,GAAGvB,iBAAiB,CAACa,IAAD,CAAxC;AACA,YAAMK,QAAQ,GAAG,KAAKZ,KAAL,CAAWE,UAA5B;AACA,YAAMW,QAAQ,GAAGD,QAAQ,GAAGK,cAA5B;AACA,WAAKH,QAAL,CAAc;AAACZ,QAAAA,UAAU,EAAEW,QAAb;AAAuBZ,QAAAA,WAAW,EAACS;AAAnC,OAAd;AACA,WAAKK,mBAAL,CAAyBL,kBAAzB;AACH,KA9DiC;;AAAA,SAgElCQ,eAhEkC,GAgEhB,MAAM;AACpB,WAAKJ,QAAL,CAAc;AAACV,QAAAA,UAAU,EAAE;AAAb,OAAd;AACH,KAlEiC;;AAAA,SAoElCe,qBApEkC,GAoEV,MAAM;AAC1B,WAAKL,QAAL,CAAc;AAACV,QAAAA,UAAU,EAAE;AAAb,OAAd;AACH,KAtEiC;;AAAA,SAwElCgB,uBAxEkC,GAwER,MAAM;AAC5B;AACA,WAAKN,QAAL,CAAc;AAACT,QAAAA,OAAO,EAAE;AAAV,OAAd;AACA,YAAMgB,KAAK,GAAG;AACVpB,QAAAA,WAAW,EAAE,KAAKD,KAAL,CAAWC,WADd;AAEVqB,QAAAA,KAAK,EAAE,KAAKtB,KAAL,CAAWE,UAFR;AAGVqB,QAAAA,QAAQ,EAAE;AACNC,UAAAA,IAAI,EAAE,cADA;AAENC,UAAAA,OAAO,EAAE;AACLC,YAAAA,MAAM,EAAE,UADH;AAELC,YAAAA,OAAO,EAAE,OAFJ;AAGLC,YAAAA,OAAO,EAAE;AAHJ,WAFH;AAONC,UAAAA,KAAK,EAAE;AAPD,SAHA;AAYVC,QAAAA,cAAc,EAAE;AAZN,OAAd;AAeArC,MAAAA,KAAK,CAACsC,IAAN,CAAW,cAAX,EAA2BV,KAA3B,EACKW,IADL,CACUC,QAAQ,IAAI;AACd,aAAKnB,QAAL,CAAc;AAACT,UAAAA,OAAO,EAAE,KAAV;AAAiBD,UAAAA,UAAU,EAAE;AAA7B,SAAd;AACH,OAHL,EAIK8B,KAJL,CAIWC,KAAK,IAAI;AACZ,aAAKrB,QAAL,CAAc;AAACT,UAAAA,OAAO,EAAE,KAAV;AAAiBD,UAAAA,UAAU,EAAE;AAA7B,SAAd;AACH,OANL;AAOH,KAjGiC;AAAA;;AAelCgC,EAAAA,iBAAiB,GAAI;AACjB3C,IAAAA,KAAK,CAAC4C,GAAN,CAAU,6DAAV,EACKL,IADL,CACUC,QAAQ,IAAI;AACd,WAAKnB,QAAL,CAAc;AAACb,QAAAA,WAAW,EAAEgC,QAAQ,CAACK;AAAvB,OAAd;AACH,KAHL;AAIH;;AAEDvB,EAAAA,mBAAmB,CAACd,WAAD,EAAc;AAC7B,UAAMsC,GAAG,GAAGC,MAAM,CAACC,IAAP,CAAYxC,WAAZ,EACKyC,GADL,CACSC,KAAK,IAAI;AACV,aAAO1C,WAAW,CAAC0C,KAAD,CAAlB;AACH,KAHL,EAGOC,MAHP,CAGc,CAACL,GAAD,EAAMM,EAAN,KAAY;AAClB,aAAON,GAAG,GAAGM,EAAb;AACH,KALL,EAKO,CALP,CAAZ;AAMA,SAAK/B,QAAL,CAAc;AAACX,MAAAA,WAAW,EAAEoC,GAAG,GAAG;AAApB,KAAd;AACH;;AAqEDO,EAAAA,MAAM,GAAE;AACJ,UAAMC,YAAY,qBACX,KAAK/C,KAAL,CAAWC,WADA,CAAlB;;AAIA,SAAK,IAAI+C,GAAT,IAAgBD,YAAhB,EAA8B;AAC1BA,MAAAA,YAAY,CAACC,GAAD,CAAZ,GAAoBD,YAAY,CAACC,GAAD,CAAZ,IAAqB,CAAzC;AACH;;AAED,QAAIC,YAAY,GAAG,oBAAC,YAAD;AACf,MAAA,WAAW,EAAE,KAAKjD,KAAL,CAAWC,WADT;AAEf,MAAA,KAAK,EAAE,KAAKD,KAAL,CAAWE,UAFH;AAGf,MAAA,iBAAiB,EAAE,KAAKiB,qBAHT;AAIf,MAAA,iBAAiB,EAAE,KAAKC,uBAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAnB;;AAKA,QAAG,KAAKpB,KAAL,CAAWK,OAAd,EAAuB;AACnB4C,MAAAA,YAAY,GAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAf;AACH;;AAED,QAAIC,MAAM,GAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAb;;AAEA,QAAG,KAAKlD,KAAL,CAAWC,WAAd,EAA0B;AACtBiD,MAAAA,MAAM,GACF,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,WAAW,EAAE,KAAKlD,KAAL,CAAWC,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,aAAD;AACI,QAAA,eAAe,EAAE,KAAKK,oBAD1B;AAEI,QAAA,iBAAiB,EAAE,KAAKU,uBAF5B;AAGI,QAAA,QAAQ,EAAE+B,YAHd;AAII,QAAA,WAAW,EAAE,KAAK/C,KAAL,CAAWG,WAJ5B;AAKI,QAAA,OAAO,EAAE,KAAKe,eALlB;AAMI,QAAA,KAAK,EAAE,KAAKlB,KAAL,CAAWE,UANtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ;AAWH,KAhCG,CAmCJ;;;AACA,WACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAE,KAAKF,KAAL,CAAWI,UAAxB;AAAoC,MAAA,WAAW,EAAE,KAAKe,qBAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE8B,YADF,CADJ,EAIIC,MAJJ,CADJ;AAQH;;AA/IiC;;AAkJtC,eAAe1D,gBAAgB,CAACO,aAAD,EAAgBN,KAAhB,CAA/B","sourcesContent":["import React, { Component } from 'react';\r\nimport Aux from '../../hoc/Auxiliary/Aux';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport axios from '../../axios-orders';\r\n\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7\r\n};\r\n\r\nclass BurgerBuilder extends Component {\r\n    /** \r\n    constructor (props) {\r\n        super(props);\r\n        this.state ={...}\r\n    }*/\r\n    \r\n    state = {\r\n        ingredients: null,\r\n        totalPrice: 4,\r\n        purchasable: false,\r\n        purchasing: false,\r\n        loading: false\r\n    }\r\n\r\n    componentDidMount () {\r\n        axios.get('https://burger-builder-49e1a.firebaseio.com/ingrediens.json')\r\n            .then(response => {\r\n                this.setState({ingredients: response.data});\r\n            });\r\n    }\r\n\r\n    updatePurchaseState(ingredients) {\r\n        const sum = Object.keys(ingredients)\r\n                        .map(igKey => {\r\n                            return ingredients[igKey];\r\n                        }).reduce((sum, el) =>{\r\n                            return sum + el;\r\n                        }, 0);\r\n        this.setState({purchasable: sum > 0});\r\n    }\r\n\r\n\r\n    addIngredientHandler = (type) => {\r\n        const oldCount = this.state.ingredients[type];\r\n        const updatedCount = oldCount + 1;\r\n        const updatedIngredients = {\r\n            ...this.state.ingredients\r\n        }; \r\n        updatedIngredients[type] = updatedCount;\r\n        const priceAddition = INGREDIENT_PRICES[type];\r\n        const oldPrice = this.state.totalPrice;\r\n        const newPrice = oldPrice + priceAddition;\r\n        this.setState({totalPrice: newPrice, ingredients: updatedIngredients});\r\n        this.updatePurchaseState(updatedIngredients);\r\n    }\r\n\r\n    removeIngredientHandler = (type) => {\r\n        const oldCount = this.state.ingredients[type];\r\n        if( oldCount <= 0){\r\n            return;\r\n        }\r\n        const updatedCount = oldCount - 1;\r\n        const updatedIngredients = {\r\n            ...this.state.ingredients\r\n        };\r\n        updatedIngredients[type] = updatedCount;\r\n        const priceDeduction = INGREDIENT_PRICES[type];\r\n        const oldPrice = this.state.totalPrice;\r\n        const newPrice = oldPrice - priceDeduction;\r\n        this.setState({totalPrice: newPrice, ingredients:updatedIngredients});\r\n        this.updatePurchaseState(updatedIngredients);\r\n    }\r\n\r\n    purchaseHandler = () => {\r\n        this.setState({purchasing: true});\r\n    }\r\n\r\n    purchaseCancelHandler = () => {\r\n        this.setState({purchasing: false});\r\n    }\r\n\r\n    purchaseContinueHandler = () => {\r\n        //alert('You continue!');\r\n        this.setState({loading: true});\r\n        const order = {\r\n            ingredients: this.state.ingredients,\r\n            price: this.state.totalPrice,   \r\n            customer: {\r\n                name: 'İsa Kulaksız',\r\n                address: {\r\n                    street: 'İstanbul',\r\n                    zipCode: '25500',\r\n                    country: 'Turkey'\r\n                },\r\n                email: 'isakulaksiz@outlook.com'\r\n            },\r\n            deliveryMethod: 'fastest'   \r\n        }\r\n\r\n        axios.post('/orders.json', order)\r\n            .then(response => {\r\n                this.setState({loading: false, purchasing: false});\r\n            })\r\n            .catch(error => {\r\n                this.setState({loading: false, purchasing: false});\r\n            });\r\n    }\r\n\r\n    render(){\r\n        const disabledInfo = {\r\n            ...this.state.ingredients\r\n        };\r\n\r\n        for( var key in disabledInfo ){\r\n            disabledInfo[key] = disabledInfo[key] <= 0\r\n        }\r\n        \r\n        let orderSummary = <OrderSummary \r\n            ingredients={this.state.ingredients}\r\n            price={this.state.totalPrice}\r\n            purchaseCancelled={this.purchaseCancelHandler}\r\n            purchaseContinued={this.purchaseContinueHandler}/>;\r\n        if(this.state.loading) {\r\n            orderSummary = <Spinner />;\r\n        }\r\n\r\n        let burger = <Spinner />\r\n\r\n        if(this.state.ingredients){\r\n            burger =  (\r\n                <Aux>\r\n                    <Burger ingredients={this.state.ingredients}/>\r\n                    <BuildControls\r\n                        ingredientAdded={this.addIngredientHandler}\r\n                        ingredientRemoved={this.removeIngredientHandler}\r\n                        disabled={disabledInfo}\r\n                        purchasable={this.state.purchasable} \r\n                        ordered={this.purchaseHandler}\r\n                        price={this.state.totalPrice}/>\r\n                </Aux>);  \r\n        }\r\n\r\n              \r\n        // {salad: true, meat: false ....}\r\n        return(\r\n            <Aux>\r\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\r\n                 {orderSummary}   \r\n                </Modal>\r\n               {burger}\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withErrorHandler(BurgerBuilder, axios);"]},"metadata":{},"sourceType":"module"}